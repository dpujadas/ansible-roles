---
# tasks file for nginx

- name: Include nginx-community tasks
  include: "community.yml"
  when: nginx_source == 'community'
  tags: [nginx,nginx-community]

- name: Include nginx-openresty tasks
  include: "openresty.yml"
  when: nginx_source == 'openresty'
  tags: [nginx,nginx-openresty]

- name: Ensure included directories exist
  file:
    state: 'directory'
    path: '/etc/nginx/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - sites-enabled
    - conf.d
  tags: [nginx,configuration]

- name: Configure nginx server
  template:
    src: 'nginx.conf.j2'
    dest: '/etc/nginx/nginx.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: Restart nginx
  tags: [nginx,configuration]

- name: Enable custom configurations
  template:
    src: '{{ item.template }}'
    dest: '/etc/nginx/conf.d/{{ item.conf_name }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: nginx_confs
  notify: Reload nginx
  tags: [nginx,configuration]

- name: Disable default vhosts
  file:
    state: 'absent'
    path: '/etc/nginx/conf.d/{{ item }}'
  with_items:
    - default.conf
    - example_ssl.conf
  notify: Reload nginx
  tags: [nginx,configuration]

- name: Configure sites
  template:
    src: '{{ item.template }}'
    dest: '/etc/nginx/sites-enabled/{{ item.filename|default(item.server_name) }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: nginx_sites
  notify: Reload nginx
  tags: [nginx,configuration]

- name: Ensure nginx is started and enabled at boot
  service:
    name: 'nginx'
    state: 'started'
    enabled: 'yes'
  tags: [nginx,services]
