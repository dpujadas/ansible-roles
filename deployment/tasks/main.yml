---
# tasks file for deployment

- name: Ensure {{ deployment_root }} exists and belongs to {{ deployment_user }}
  user:
    name: '{{ deployment_user }}'
    group: '{{ deployment_group }}'
    home: '{{ deployment_root }}'
    createhome: 'yes'
    shell: '/bin/bash'
  tags: [deployment]

- name: Allow {{ deployment_user }} to perform php-fpm restart
  template:
    src: 'sudoers.j2'
    dest: '/etc/sudoers.d/deployment_user'
    owner: 'root'
    group: 'root'
    mode: '0440'
  when: deployment_use_php_fpm
  tags: [deployment]

- name: Install some packages
  apt:
    name: '{{ item.name }}'
    state: '{{ item.state }}'
    update_cache: 'yes'
  with_items:
    - { name: 'git', state: 'present' }
    - { name: 'mysql-client-5.6', state: 'present' }
  tags: [deployment,packages]

- name: Install composer
  get_url:
    url: 'https://getcomposer.org/composer.phar'
    dest: '/usr/local/bin/composer'
    owner: '{{ deployment_user }}'
    group: '{{ deployment_group }}'
    mode: '0755'
  tags: [deployment,packages]

- name: Configure composer
  shell: su -l {{ deployment_user }} -c "composer config -g github-oauth.github.com {{ deployment_github_token }}"
  args:
    creates: '{{ deployment_root }}/.composer/auth.json'
  when: deployment_github_token is defined
  tags: [deployment,packages]

- name: Create .ssh directory
  file:
    dest: '{{ deployment_root }}/.ssh'
    state: 'directory'
    owner: '{{ deployment_user }}'
    group: '{{ deployment_group }}'
    mode: '0700'
  tags: [deployment]

- name: Install rsa key for ssh connections (to github, bitbucket, ...)
  copy:
    src: '{{ deployment_rsa_key }}'
    dest: '{{ deployment_root }}/.ssh/id_rsa'
    owner: '{{ deployment_user }}'
    group: '{{ deployment_group }}'
    mode: '0600'
    force: '{{ deployment_force_rsa_key }}'
  when: deployment_rsa_key is defined
  register: deployment_rsa_key_copy
  tags: [deployment,rsa-key]

- name: Decrypt rsa key
  shell: openssl aes-256-cbc -salt -a -d -in {{ deployment_root }}/.ssh/id_rsa -out {{ deployment_root }}/.ssh/id_rsa.dec -k {{ deployment_key_password }}
  args:
    creates: '{{ deployment_root }}/.ssh/id_rsa.dec'
  when: deployment_rsa_key_copy.changed
  tags: [deployment,rsa-key]

- name: Rename decrypted key
  shell: mv {{ deployment_root }}/.ssh/id_rsa.dec {{ deployment_root }}/.ssh/id_rsa
  args:
    removes: '{{ deployment_root }}/.ssh/id_rsa.dec'
  when: deployment_rsa_key_copy.changed
  tags: [deployment,rsa-key]
